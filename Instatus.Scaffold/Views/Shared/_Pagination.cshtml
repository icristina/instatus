@model Instatus.Scaffold.Models.Pagination

@using Instatus.Core.Extensions

@{
    var routeValues = new RouteValueDictionary(Model.RouteValues);
    var actionName = ViewContext.RouteData.GetRequiredString("action");
    var controllerName = ViewContext.RouteData.GetRequiredString("controller");
    var index = 0;
}

<div class="pagination pagination-centered">
    <ul>
        @if (Model.List.TotalPageCount > 1)
        {
            while (index < Model.List.TotalPageCount)
            {
                var indexRouteValues = new RouteValueDictionary(routeValues);
                indexRouteValues.Add("pageIndex", index);                
                <li class="@(index == Model.List.PageIndex ? "active" : null)">
                    @Html.ActionLink((index + 1).ToString(), actionName, controllerName, indexRouteValues, null) 
                </li>            
                var nextIndex = PaginationExtensions.IncrementPager(index, Model.List.PageIndex, Model.List.TotalPageCount, 10);
                if ((nextIndex - index) > 1)
                {
                    <li class="disabled"><a>&hellip;</a></li>
                }
                index = nextIndex;
            }
        }
    </ul>
</div>