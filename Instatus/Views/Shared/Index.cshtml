@model IWebView
           
@using Instatus.Data

@{
    Layout = "~/Views/Shared/_Bootstrap.cshtml";
}

@section header {
    @Html.Tag("h1", Model.Document.Title)     
}

@section menu {
    <div id="actions">
        @if (Model.Can("Create", null))
        {
            @Html.ActionLink(WebPhrase.Create, "Create", null, new { target = "_blank", @class = "btn btn-primary" })
        }
    </div>
    @if (Model.Query.IsDateView)
    {
        var startDate = Model.Query.StartDate.Value;    
        <div id="date">
            <a href="@Url.Action("Index", Model.Query.WithStartDate(startDate.Previous(Model.Query.ViewMode)).ToRouteValueDictionary())">
                @Html.LeftArrow()
            </a> 
            @Model.Query.StartDate.Value.ToString(Model.Query.ViewMode)
            <a href="@Url.Action("Index", Model.Query.WithStartDate(startDate.Next(Model.Query.ViewMode)).ToRouteValueDictionary())">
                @Html.RightArrow()
            </a>    
        </div>
    }
    @if (!Model.Filter.IsEmpty())
    {
        using (Html.BeginActionForm(id: "filter"))
        {
            @Html.DropDownList("filter", Model.Filter)
            @Html.SubmitButton(WebPhrase.Filter)
        }
    }  
    <div class="btn-toolbar">
        @if (Model.Query.ViewMode == ViewMode.Index)
        {
            <div class="btn-group">
                @Html.ActionLink("0 - 9", "Index", new { Mode = ViewMode.Index, Filter = "0", Command = Model.Query.Command }, new { @class = "btn".Append(" active", Model.Query.Filter.Match("0")) })
                @foreach (var letter in Instatus.Data.Generator.UpperCaseLetters)
                {
                    @Html.ActionLink(letter.ToString(), "Index", new { Mode = ViewMode.Index, Filter = letter, Command = Model.Query.Command }, new { @class = "btn".Append(" active", Model.Query.Filter.Match(letter)) })
                }        
            </div>
        }
        @if (!Model.Mode.IsEmpty())
        {
            <div class="btn-group">
                @foreach (var mode in Model.Mode)
                {
                    @Html.ActionLink(mode.Text, "Index", new { Mode = mode.Value, Command = Model.Query.Command }, new { @class = "btn".Append(" active", mode.Selected) })
                }
            </div>
        } 
    </div>
    @Html.Paging()    
}

@section aside {
    @if (!Model.Document.IsEmpty() && !Model.Document.Body.IsEmpty())
    {
        @Html.Content(Model.Document.Body)
    }
}

<table class="table table-striped">
    <colgroup>
        @if (Model.Columns.Contains("Id"))
        {
            <col class="id" />
        }
        @if (Model.Columns.Contains("Slug"))
        {
            <col class="slug" />
        }
        @if (Model.Columns.Contains("Picture"))
        {
            <col class="picture" />
        }        
        <col class="description" />
        <col class="icon" />
        <col class="actions" />
    </colgroup>
    <thead>
        <tr>
            @if (Model.Columns.Contains("Id"))
            {
                <th>@WebPhrase.Id</th>
            }                
            @if (Model.Columns.Contains("Slug"))
            {
                <th>@WebPhrase.Slug</th>
            }
            @if (Model.Columns.Contains("Picture"))
            {
                <th>@WebPhrase.Picture</th>
            }            
            <th>@WebPhrase.Description</th>
            <th></th>
            <th>@WebPhrase.Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (dynamic entry in Model)
        {
            var row = entry as object;
            var key = row.GetKey().AsString().ToUrlEncoded();
            var routeData = new { id = key };
            var commandButton = new { target = "_blank", @class = "btn" };                    
            <tr>
                @if (Model.Columns.Contains("Id")) 
                {
                    <td>
                        @row.GetKey()
                    </td>
                }
                @if (Model.Columns.Contains("Slug"))
                {
                    <td>
                        @entry.Slug                  
                    </td>
                }
                @if (Model.Columns.Contains("Picture"))
                {
                    <td>
                        @Html.Image(entry.Picture as string, className: "thumbnail", size: ImageSize.Thumb)               
                    </td>
                }                
                <td>
                    @if (((entry is Entry || entry is Link) && entry.Picture != null))
                    {
                        @Html.Image(entry.Picture as string, className: "thumbnail")
                    }              
                    else
                    {
                        @Html.Raw(row.ToString())
                    }
                </td>
                <td>
                    @if (Model.Columns.Contains("Published"))
                    {
                        if ((entry.Published as String).AsEnum<Published>() != Published.Active)
                        {
                            <i class="icon-ban-circle" title="@entry.Published"></i>
                        }   
                    }
                </td>
                <td>
                    <span class="btn-group">
                        @if (Model.Can("Details", row))
                        {
                            @Html.ActionLink(WebPhrase.Details, "Details", routeData, commandButton)
                        }
                        @if (Model.Can("Edit", row))
                        {
                            @Html.ActionLink(WebPhrase.Edit, "Edit", routeData, commandButton)
                        }                    
                        @if (Model.Can("Delete", row))
                        {
                            using (Html.BeginForm("Delete", ViewContext.RouteData.ControllerName(), routeData))
                            {
                                <span></span>
                                @Html.SubmitButton(WebPhrase.Delete, "btn")
                            }
                        }
                        @if (!Model.Commands.IsEmpty())
                        {
                            foreach (var command in Model.Commands.OfType<IWebCommand>())
                            {
                                var link = command.GetLink(entry, Url);
                                if (link != null)
                                {
                                    <a href="@link.Uri" rel="@(link.Rel ?? "command")" class="btn">@link.Title</a>
                                }
                            }
                        }                            
                    </span>
                </td>
            </tr>
        }
    </tbody>
</table>